%code written in Octave language (a language similar to Matlab)
%m-file is extension of Octave too

%we have a rectangular fourier series that satisfy three non-singular walls but not the rest
%we also have a polar fourier series that satisfies the singular wall but not the rest
%both of them have indeterminate coefficients

%the rectangular fourier series was obtained from this paper:
%Liu, C. S., Chen, Y. W., & Chang, J. R. (2007). A new collocation method for Motz’s problem. ICCES on line Journal, 3, 93-99.

%the polar one with coefficients up to 40 were obtained from this paper 
%Hong, W. T. (2016). Enriched meshfree method for an accurate numerical solution of the Motz problem. Advances in Mathematical Physics, 2016.

%we tried matching these coefficients by calculating the rectangular fourier series
%on a circle with radius r=1 which touches the domain boundaries in 3 points (0,1), (1,0), (-1,0)

%after that, both coefficients are solved by integration over the range 0,pi
%and solving a system of equations

%the results showed that the coefficient matrix (which is not necessarily rectangular)
%has a high condition number. Octave also ran into difficulties during integration

%comparison of results against results of Hong (2016) were unfavorable but
%I think that the general solution is enough for creating plots. It's just not too exact

%integrations are done with Octave's quad command

%for the purpose of matching, the rectangular series is expanded using the radial series
%the constant 500 can be analytically expanded
%however, the other terms involving (u-500) and (u_x*x+u_y*y) when integrated over r=0,theta=0..pi
%cannot be analytically integrated.

format long;
clear;
close all; 

N=60;
J=120;

l = @(j) pi/2*(j-1/2);

x = @(t) cos(t);
y = @(t) sin(t);
u  = @(t,j) -1/l(j) * cosh(l(j)*(1-y(t))) / sinh(l(j)) * sin(l(j)*(1-x(t)));
ux = @(t,j)           cosh(l(j)*(1-y(t))) / sinh(l(j)) * cos(l(j)*(1-x(t)));
uy = @(t,j)           sinh(l(j)*(1-y(t))) / sinh(l(j)) * sin(l(j)*(1-x(t)));

##u  = @(t,j) -1/l(j) * (exp(l(j)*(0-y(t)))+exp(-l(j)*(2-y(t)))) / (1-exp(-2*l(j))) * sin(l(j)*(1-x(t)));
##ux = @(t,j)           (exp(l(j)*(0-y(t)))+exp(-l(j)*(2-y(t)))) / (1-exp(-2*l(j))) * cos(l(j)*(1-x(t)));
##uy = @(t,j)           (exp(l(j)*(0-y(t)))-exp(-l(j)*(2-y(t)))) / (1-exp(-2*l(j))) * sin(l(j)*(1-x(t)));

u_grad = @(t,j) ux(t,j)*x(t)/1+uy(t,j)*y(t)/1;

d_nj=zeros(N,J);
e_nj=zeros(N,J);
h_nj=zeros(N,J);
c_n=zeros(N,1);
b_j=zeros(J,1);
a_n=zeros(N,1);

for n=1:N
  c_n(n,1)=2*sin(pi*(n-1/2))/(pi*(n-1/2))*500;
  for j=1:J
    f = @(t) u(t,j)*cos((n-1/2)*t);
    d_nj(n,j)=2/pi*quad(f,0,pi);
    %quad(f,0,1,[0;1e-13]);
    
    f = @(t) u_grad(t,j)*cos((n-1/2)*t);
    e_nj(n,j)=2/pi*quad(f,0,pi);
    
    h_nj(n,j)=e_nj(n,j)/(n-1/2)-d_nj(n,j);
  endfor
endfor

cond(h_nj)

b_j=h_nj\c_n;


for n=1:N
  for j=1:J
    a_n(n,1)=a_n(n,1)+1/(n-1/2)*e_nj(n,j)*b_j(j,1);
  endfor
endfor


aan=zeros(100,3);
for n=1:N
  aan(n,1)=a_n(n,1);
endfor

aan(1:40,2)=[+401.1624537452345; +87.65592019508790; +17.23791507944674; -8.071215259682478; +1.440272717022879; +3.310548859207677e-01; +2.754373445087275e-01; -8.693299465893235e-02; +3.360487861931393e-02; +1.538437428404088e-02; +7.302301728215649e-03; -3.184113774923665e-03; +1.220646385725587e-03; +5.309652968145126e-04; +2.715121558566150e-04; -1.200455757406748e-04; +5.053973008462738e-05; +2.316701639900009e-05; +1.153538904754159e-05; -5.293975100353315e-06; +2.290744823584897e-06; +1.063692985558411e-06; +5.314980562968453e-07; -2.454035587720472e-07; +1.094258200815170e-07; +5.204123234110838e-08; +2.594548101382485e-08; -1.091753910227160e-08; +5.274360833540486e-09; +2.733609395521398e-09; +1.354076917219339e-09; -1.816851682230465e-10; +2.266480380995557e-10; +1.541467769079195e-10; +7.396367522015557e-11; +5.058240306963314e-11; +6.165507191581204e-12; +6.544346229722119e-12; +2.943942531164191e-12; +5.127853852958069e-12];

for n=1:40
  aan(n,3)=abs((aan(n,2)-aan(n,1))/aan(n,2));
endfor





%Octave plotter for motz matching file

close all;

M=100;
xx=zeros(2*M+1,M+1);
yy=zeros(2*M+1,M+1);
uu1=zeros(2*M+1,M+1); %my radial
uu2=zeros(2*M+1,M+1); %exact radial
uu3=zeros(2*M+1,M+1); %my rectangular fourier

uux1=zeros(2*M+1,M+1);
uux2=zeros(2*M+1,M+1);
uux3=zeros(2*M+1,M+1);

uuy1=zeros(2*M+1,M+1);
uuy2=zeros(2*M+1,M+1);
uuy3=zeros(2*M+1,M+1);

for ii=1:2*M+1
  for jj=1:M+1
    x=-1+(ii-1)/M;
    y=(jj-1)/M;
    xx(ii,jj)=x;
    yy(ii,jj)=y;
    r=sqrt(x^2+y^2);
    if x==0
      t=pi/2;
    elseif y==0 && x>0
      t=0;
    elseif y==0 && x<0 
      t=pi;
    elseif x>0 && y>0
      t=atan(y/x);
    elseif x<0 && y>0
      t=pi-atan(abs(y/x));
    else
      t=0;
    end
    
    for n=1:min(N,40)
      uu1(ii,jj)=uu1(ii,jj)+aan(n,1)*cos((n-1/2)*t)*r^(n-1/2);
    endfor
    for n=1:40
      uu2(ii,jj)=uu2(ii,jj)+aan(n,2)*cos((n-1/2)*t)*r^(n-1/2);
    endfor
    uu3(ii,jj)=500;
    for j=1:min(J,40)
      uu3(ii,jj)=uu3(ii,jj)-b_j(j,1)/(pi/2*(j-1/2))*cosh(pi/2*(j-1/2)*(1-y))/sinh(pi/2*(j-1/2))*sin(pi/2*(j-1/2)*(1-x));
    endfor
    
  endfor
endfor

contour(xx,yy,uu1);
colorbar 
title("polar-my");
figure();
contour(xx,yy,uu2);
colorbar 
title("polar-exact");
figure();
contour(xx,yy,uu3);
colorbar 
title("rectangular-my");
figure();

hold on
 plot(xx(:,1),uu1(:,1));
 legend();
 plot(xx(:,1),uu2(:,1));
 legend();
 plot(xx(:,1),uu3(:,1));
 legend("polar my y=0","polar exact y=0","rectangular my y=0");
hold off;

figure();

hold on
 plot(xx(:,11),uu1(:,11));
 legend();
 plot(xx(:,11),uu2(:,11));
 legend();
 plot(xx(:,11),uu3(:,11));
 legend("polar my y=0.1","polar exact y=0.1","rectangular my y=0.1");
hold off;

figure();

hold on
 plot(xx(:,41),uu1(:,41));
 legend();
 plot(xx(:,41),uu2(:,41));
 legend();
 plot(xx(:,41),uu3(:,41));
 legend("polar my y=0.4","polar exact y=0.4","rectangular my y=0.4");
hold off;

figure();

hold on
 plot(xx(:,101),uu1(:,101));
 legend();
 plot(xx(:,101),uu2(:,101));
 legend();
 plot(xx(:,101),uu3(:,101));
 legend("polar my y=1","polar exact y=1","rectangular my y=1");
hold off;

figure();

hold on
 plot(yy(201,:),uu1(201,:));
 legend();
 plot(yy(201,:),uu2(201,:));
 legend();
 plot(yy(201,:),uu3(201,:));
 legend("polar my x=1","polar exact x=1","rectangular my x=1");
hold off;


#results:  polar my ---- polar exact --- relative difference

##
##N=60,J=120
##my calc			hong's paper		relative difference
#1#401.1624537443132	401.1624537452345	2.296621042908159e-12
#2#87.6559201957392	87.6559201950879	7.430161944599844e-12
#3#17.2379150798338	17.23791507944674	2.245384638341663e-11
#4#-8.071215259057229	-8.071215259682479	7.746654817679277e-11
#5#1.44027271786258	1.440272717022879	5.830151077985975e-10
#6#0.3310548853396724	0.3310548859207677	1.755283814606751e-09
#7#0.2754373451972202	0.2754373445087275	2.499634768224605e-09
#8#-0.08693299307646135	-0.08693299465893235	1.820334163879433e-08
#9#0.03360487988808981	0.03360487861931393	3.775570497786258e-08
#10#0.01538438383861645	0.01538437428404088	6.210571448549874e-07
#11#0.007302300046448322	0.007302301728215649	2.303064690498949e-07
#12#-0.003184112777610867	-0.003184113774923665	3.132151888869468e-07
#13#0.001220647080959807	0.001220646385725587	5.695623464066347e-07
#14#0.0005309651892659861	0.0005309652968145126	2.025528356624383e-07
#15#0.0002715124037394462	0.000271512155856615	9.129713931059521e-07
#16#-0.0001200458670346308	-0.0001200455757406748	2.426528042977794e-06
#17#5.054022093576443e-05	5.053973008462738e-05	9.712183587659785e-06
#18#2.316673812023662e-05	2.316701639900009e-05	1.20118516204425e-05
#19#1.153530844692774e-05	1.153538904754159e-05	6.987247115768521e-06
#20#-5.295582522893416e-06	-5.293975100353315e-06	0.0003036324330263877
#21#2.291358276496763e-06	2.290744823584897e-06	0.0002677962667645519
#22#1.063206803122302e-06	1.063692985558411e-06	0.0004570702662422533
#23#5.312488267281146e-07	5.314980562968453e-07	0.0004689190595864037
#24#-2.473354885970669e-07	-2.454035587720472e-07	0.007872460508261209
#25#1.099112870994734e-07	1.09425820081517e-07	0.00443649421676488
#26#5.096705198853746e-08	5.204123234110838e-08	0.02064094765339371
#27#2.577080279730914e-08	2.594548101382485e-08	0.006732510236469712
#28#-1.21362645245926e-08	-1.09175391022716e-08	0.1116300487595617
#29#5.489286199200638e-09	5.274360833540486e-09	0.0407490826743229
#30#2.598471070258679e-09	2.733609395521398e-09	0.04943585776523984
#31#1.297135718281162e-09	1.354076917219339e-09	0.042051672408026
#32#-6.187732166929027e-10	-1.816851682230465e-10	2.405744248387207
#33#2.830462704495051e-10	2.266480380995557e-10	0.2488361815211319
#34#1.243918440474445e-10	1.541467769079195e-10	0.1930298735876214
#35#6.850502456967611e-11	7.396367522015557e-11	0.07380177680775854
#36#-5.541519500218417e-11	5.058240306963314e-11	2.095542948521012
#37#1.652910100458094e-11	6.165507191581204e-12	1.680898828104666
#38#-4.489858138057023e-11	6.544346229722119e-12	7.860667178129523
#39#7.172536869992641e-12	2.943942531164191e-12	1.4363712246639
#40#-1.10968120109467e-10	5.127853852958069e-12	22.64026575083718
##
##
##N=50 J=65  condition=
##
##401.1624537452344	401.1624537452345	1.416967573363869e-16
##87.65592019508793	87.6559201950879	3.242417553446289e-16
##17.23791507944665	17.23791507944674	4.946371292481658e-15
##-8.071215259698224	-8.071215259682479	1.950837205779499e-12
##1.440272717022758	1.440272717022879	8.371346554666196e-14
##0.3310548859206397	0.3310548859207677	3.866691602609884e-13
##0.2754373445091274	0.2754373445087275	1.451881313273807e-12
##-0.08693299452557912	-0.08693299465893235	1.533977194257501e-09
##0.03360487842651836	0.03360487861931393	5.737130413667315e-09
##0.01538437448257639	0.01538437428404088	1.290501067848758e-08
##0.00730230167405568	0.007302301728215649	7.4168352746938e-09
##-0.003184113916368903	-0.003184113774923665	4.442216840628333e-08
##0.001220646109520475	0.001220646385725587	2.262777454611418e-07
##0.0005309654800650064	0.0005309652968145126	3.451270636174867e-07
##0.0002715121819273636	0.000271512155856615	9.602055755128227e-08
##-0.0001200463735367453	-0.0001200455757406748	6.645776536148125e-06
##5.053983187657332e-05	5.053973008462738e-05	2.014097538084688e-06
##2.316682353663627e-05	2.316701639900009e-05	8.324868446750318e-06
##1.153524915410362e-05	1.153538904754159e-05	1.212732725336865e-05
##-5.295738986332843e-06	-5.293975100353315e-06	0.000333187434034314
##2.291249213517629e-06	2.290744823584897e-06	0.0002201859969470451
##1.063225661616929e-06	1.063692985558411e-06	0.000439341001423311
##5.312400544014995e-07	5.314980562968453e-07	0.0004854239677628029
##-2.473728300204231e-07	-2.454035587720472e-07	0.008024623840949034
##1.098845977699076e-07	1.09425820081517e-07	0.004192590816763299
##5.167777469318457e-08	5.204123234110838e-08	0.006984032306181574
##2.576689915427532e-08	2.594548101382485e-08	0.006882965841117788
##-1.214168308949493e-08	-1.09175391022716e-08	0.1121263661852716
##5.480610649338802e-09	5.274360833540486e-09	0.03910422936685347
##2.60396534022822e-09	2.733609395521398e-09	0.04742596199207523
##1.288358251680388e-09	1.354076917219339e-09	0.04853392351884054
##-6.079800152908321e-10	-1.816851682230465e-10	2.346338180695317
##2.630007860798811e-10	2.266480380995557e-10	0.1603929523729536
##1.523950184795231e-10	1.541467769079195e-10	0.01136422352471785
##2.767252746394e-11	7.396367522015557e-11	0.6258632716455514
##5.231038692488088e-12	5.058240306963314e-11	0.8965838241159303
##-6.350940259802762e-11	6.165507191581204e-12	11.30075882236381
##8.111843228381099e-11	6.544346229722119e-12	11.39519264971031
##-1.447694568390556e-10	2.943942531164191e-12	50.17536782955002
##1.381040958675639e-10	5.127853852958069e-12	25.93214351027121
##
##N=20,J=120
##401.16245374524	401.1624537452345	1.374458546162953e-14
##87.65592019505681	87.6559201950879	3.54720480347024e-13
##17.23791507969037	17.23791507944674	1.413363767185478e-11
##-8.071215260233888	-8.071215259682479	6.831803723705426e-11
##1.440272720293511	1.440272717022879	2.270842145939275e-09
##0.3310548808821149	0.3310548859207677	1.521999217374168e-08
##0.2754373665733819	0.2754373445087275	8.010770825661494e-08
##-0.08693301963840611	-0.08693299465893235	2.873416917403267e-07
##0.03360498007579715	0.03360487861931393	3.019099826872115e-06
##0.0153842768481863	0.01538437428404088	6.333429801998205e-06
##0.007302648996817253	0.007302301728215649	4.755604664515242e-05
##-0.003184399531166988	-0.003184113774923665	8.97443569930426e-05
##0.00122161107496115	0.001220646385725587	0.0007903101560318504
##0.000530251013442582	0.0005309652968145126	0.001345254343769521
##0.0002737813155793364	0.000271512155856615	0.008357488509353214
##-0.0001215812389552133	-0.0001200455757406748	0.01279233495331709
##5.523147037880084e-05	5.053973008462738e-05	0.0928327137148787
##2.020173591566426e-05	2.316701639900009e-05	0.1279957864347099
##2.026682294913127e-05	1.153538904754159e-05	0.7569258276079135
##-1.0514145283715e-05	-5.293975100353315e-06	0.9860586958584866
##
##N=20 J=40
##401.1624537452383	401.1624537452345	9.493682741537921e-15
##87.6559201950421	87.6559201950879	5.225155887378695e-13
##17.23791507961155	17.23791507944674	9.560923510759337e-12
##-8.071215260524607	-8.071215259682479	1.043372178663269e-10
##1.44027271932261	1.440272717022879	1.596732912465874e-09
##0.3310548785748168	0.3310548859207677	2.218952571170957e-08
##0.2754373595113925	0.2754373445087275	5.44685219844774e-08
##-0.0869330315670494	-0.08693299465893235	4.245582151346482e-07
##0.0336049477669933	0.03360487861931393	2.057667880620408e-06
##0.01538423453364502	0.01538437428404088	9.083918090182155e-06
##0.007302534803954826	0.007302301728215649	3.191811949869854e-05
##-0.003184520002477776	-0.003184113774923665	0.0001275794719745049
##0.001221288947456271	0.001220646385725587	0.0005264110377900286
##0.0005299697018629687	0.0005309652968145126	0.001875065955377727
##0.0002730054099264563	0.000271512155856615	0.00549976874932203
##-0.000122152650569236	-0.0001200455757406748	0.01755229058264469
##5.359415353083617e-05	5.053973008462738e-05	0.06043608545384477
##1.917325967824846e-05	2.316701639900009e-05	0.1723897739772831
##1.715217227944883e-05	1.153538904754159e-05	0.4869175377404618
##-1.219655292577018e-05	-5.293975100353315e-06	1.303855362855068
##
##N-10 J=40, condition= 36931.91059437868
##87.65593826854766	87.6559201950879	2.061864129214201e-07
##17.23782718583374	17.23791507944674	5.0988540434147e-06
##-8.071050971193795	-8.071215259682479	2.035486397000178e-05
##1.439923502334275	1.440272717022879	0.000242464280879932
##0.3314736633277229	0.3310548859207677	0.001264978783776054
##0.2743982992993582	0.2754373445087275	0.003772346887901169
##-0.08588060857057465	-0.08693299465893235	0.01210571535567786
##0.03154955900722616	0.03360487861931393	0.06116134610605348
##0.01711254531728069	0.01538437428404088	0.1123328775894739


#N=20 J=40   b_j