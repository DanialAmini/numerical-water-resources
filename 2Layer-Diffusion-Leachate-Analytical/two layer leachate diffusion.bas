Attribute VB_Name = "Module1"

Public Function ccc(z, t)

    'leachate diffusion in two-layer media
    'landfill on top, layer of impermeable clay of thickness h1 below landfill
    'normal soil stratum of thickness h2 below clay layer
    
    'reference: Li, Y. C., & Cleall, P. J. (2010).
    'Analytical solutions for contaminant diffusion in double-layered porous media.
    'Journal of Geotechnical and Geoenvironmental Engineering (ASCE)
    'Volume 136, No. 11, pages 1542-1554.
    
    'diffusion equation in each layare:
    '(1/Rd1)* dc_1/dt = Ds1 * d^2c_1/dz^2,    0<z<h1
    '(1/Rd2)* dc_2/dt = Ds2 * d^2c_2/dz^2,    h1<z<H
    
    'boundary condition:
    'c_1=c0 @ z=0
    'c_2=0 @ z=H
    
    'initial condition
    'c_1=c_2=0 at t=0
    
    'interface boundary condition
    'n1*Ds1*dc_1/dz=n2*Ds2*dc_2/dz  @ z=h1
    'c_1=c_2 @ z=h1
    
    'H=h1+h2 : overal thickness
    'Ds1 & Ds2 : diffusion coefficient
    'n1 & n2: porosities
    'Rd1 & Rd2: retardation factors
    ' c1 & c2 : concentration in each layer
    
    

    h1 = 0.9
     h2 = 1.1
     Ds1 = 0#
     Ds2 = 0#
     Rd1 = 3.3
     Rd2 = 1#
     n1 = 0.444
     n2 = 0.375
    Delta = 0.25
     rho = 0.30303
     nu = 0.844595
     theta = 1.222222
     mu = 1.100964
    NN1 = 186
    c0 = 1
     Dim A(186) As Double
       Dim B(186) As Double
       Dim beta(186) As Double
       Dim lambda(186) As Double
    
    
    lambda(1) = 1.47062: lambda(2) = 2.47036: lambda(3) = 4.30345: lambda(4) = 5.07645: lambda(5) = 6.8861:
    lambda(6) = 7.93156: lambda(7) = 9.3514: lambda(8) = 10.8716: lambda(9) = 11.8282: lambda(10) = 13.68:
    lambda(11) = 14.4597: lambda(12) = 16.2414: lambda(13) = 17.3346: lambda(14) = 18.7029: lambda(15) = 20.2712:
    lambda(16) = 21.1878: lambda(17) = 23.0532: lambda(18) = 23.8462: lambda(19) = 25.5956: lambda(20) = 26.7383:
    lambda(21) = 28.0547: lambda(22) = 29.669: lambda(23) = 30.5493: lambda(24) = 32.4234: lambda(25) = 33.2358:
    lambda(26) = 34.949: lambda(27) = 36.1424: lambda(28) = 37.4067: lambda(29) = 39.0647: lambda(30) = 39.913:
    lambda(31) = 41.7906: lambda(32) = 42.6281: lambda(33) = 44.3018: lambda(34) = 45.5467: lambda(35) = 46.7593:
    lambda(36) = 48.4581: lambda(37) = 49.2793: lambda(38) = 51.1553: lambda(39) = 52.023: lambda(40) = 53.654:
    lambda(41) = 54.9509: lambda(42) = 56.1125: lambda(43) = 57.8487: lambda(44) = 58.6483: lambda(45) = 60.5176:
    lambda(46) = 61.4201: lambda(47) = 63.0059: lambda(48) = 64.3547: lambda(49) = 65.4664: lambda(50) = 67.2364:
    lambda(51) = 68.0204: lambda(52) = 69.8778: lambda(53) = 70.819: lambda(54) = 72.3575: lambda(55) = 73.7581:
    lambda(56) = 74.8212: lambda(57) = 76.6209: lambda(58) = 77.3956: lambda(59) = 79.2363: lambda(60) = 80.2195:
    lambda(61) = 81.7089: lambda(62) = 83.1606: lambda(63) = 84.1772: lambda(64) = 86.0021: lambda(65) = 86.7743:
    lambda(66) = 88.5933: lambda(67) = 89.6213: lambda(68) = 91.0603: lambda(69) = 92.5621: lambda(70) = 93.5345:
    lambda(71) = 95.3799: lambda(72) = 96.1563: lambda(73) = 97.949: lambda(74) = 99.0241: lambda(75) = 100.412:
    lambda(76) = 101.962: lambda(77) = 102.893: lambda(78) = 104.754: lambda(79) = 105.542: lambda(80) = 107.304:
    lambda(81) = 108.428: lambda(82) = 109.763: lambda(83) = 111.361: lambda(84) = 112.254: lambda(85) = 114.126:
    lambda(86) = 114.93: lambda(87) = 116.657: lambda(88) = 117.832: lambda(89) = 119.115: lambda(90) = 120.757:
    lambda(91) = 121.617: lambda(92) = 123.494: lambda(93) = 124.321: lambda(94) = 126.01: lambda(95) = 127.236:
    lambda(96) = 128.468: lambda(97) = 130.152: lambda(98) = 130.982: lambda(99) = 132.86: lambda(100) = 133.715:
    lambda(101) = 135.363: lambda(102) = 136.64: lambda(103) = 137.821: lambda(104) = 139.543: lambda(105) = 140.35:
    lambda(106) = 142.223: lambda(107) = 143.112: lambda(108) = 144.715: lambda(109) = 146.044: lambda(110) = 147.174:
    lambda(111) = 148.932: lambda(112) = 149.721: lambda(113) = 151.584: lambda(114) = 152.51: lambda(115) = 154.066:
    lambda(116) = 155.448: lambda(117) = 156.529: lambda(118) = 158.318: lambda(119) = 159.095: lambda(120) = 160.943:
    lambda(121) = 161.91: lambda(122) = 163.418: lambda(123) = 164.85: lambda(124) = 165.884: lambda(125) = 167.7:
    lambda(126) = 168.473: lambda(127) = 170.3: lambda(128) = 171.311: lambda(129) = 172.769: lambda(130) = 174.252:
    lambda(131) = 175.241: lambda(132) = 177.079: lambda(133) = 177.853: lambda(134) = 179.656: lambda(135) = 180.714:
    lambda(136) = 182.121: lambda(137) = 183.653: lambda(138) = 184.599: lambda(139) = 186.455: lambda(140) = 187.237:
    lambda(141) = 189.011: lambda(142) = 190.117: lambda(143) = 191.472: lambda(144) = 193.052: lambda(145) = 193.959:
    lambda(146) = 195.827: lambda(147) = 196.625: lambda(148) = 198.365: lambda(149) = 199.521: lambda(150) = 200.824:
    lambda(151) = 202.45: lambda(152) = 203.321: lambda(153) = 205.197: lambda(154) = 206.015: lambda(155) = 207.719:
    lambda(156) = 208.925: lambda(157) = 210.176: lambda(158) = 211.845: lambda(159) = 212.686: lambda(160) = 214.563:
    lambda(161) = 215.408: lambda(162) = 217.071: lambda(163) = 218.329: lambda(164) = 219.529: lambda(165) = 221.237:
    lambda(166) = 222.053: lambda(167) = 223.927: lambda(168) = 224.803: lambda(169) = 226.423: lambda(170) = 227.733:
    lambda(171) = 228.882: lambda(172) = 230.627: lambda(173) = 231.422: lambda(174) = 233.289: lambda(175) = 234.201:
    lambda(176) = 235.775: lambda(177) = 237.137: lambda(178) = 238.236: lambda(179) = 240.014: lambda(180) = 240.795:
    lambda(181) = 242.649: lambda(182) = 243.6: lambda(183) = 245.127: lambda(184) = 246.54: lambda(185) = 247.591:
    lambda(186) = 249.398:
    
    A(1) = 1.08401: A(2) = -3.4254: A(3) = 1.94104: A(4) = -1.79425: A(5) = 3.58833:
    A(6) = -1.05125: A(7) = 4.29074: A(8) = -1.12584: A(9) = 3.25247: A(10) = -2.10017:
    A(11) = 1.66095: A(12) = -3.73886: A(13) = 1.02693: A(14) = -4.25803: A(15) = 1.17751:
    A(16) = -3.07217: A(17) = 2.26985: A(18) = -1.54169: A(19) = 3.87485: A(20) = -1.01053:
    A(21) = 4.20396: A(22) = -1.23991: A(23) = 2.88734: A(24) = -2.44781: A(25) = 1.43649:
    A(26) = -3.99444: A(27) = 1.00174: A(28) = -4.1292: A(29) = 1.31396: A(30) = -2.70097:
    A(31) = 2.63134: A(32) = -1.34492: A(33) = 4.09604: A(34) = -1.00036: A(35) = 4.03471:
    A(36) = -1.4006: A(37) = 2.51609: A(38) = -2.81751: A(39) = 1.26625: A(40) = -4.17832:
    A(41) = 1.00636: A(42) = -3.92169: A(43) = 1.50063: A(44) = -2.33572: A(45) = 3.00327:
    A(46) = -1.19959: A(47) = 4.24023: A(48) = -1.01987: A(49) = 3.79164: A(50) = -1.61459:
    A(51) = 2.16264: A(52) = -3.18561: A(53) = 1.14401: A(54) = -4.28101: A(55) = 1.04118:
    A(56) = -3.64632: A(57) = 1.74266: A(58) = -1.99932: A(59) = 3.36162: A(60) = -1.09859:
    A(61) = 4.30012: A(62) = -1.07071: A(63) = 3.48778: A(64) = -1.8845: A(65) = 1.84774:
    A(66) = -3.52859: A(67) = 1.06251: A(68) = -4.29739: A(69) = 1.10905: A(70) = -3.3183:
    A(71) = 2.03918: A(72) = -1.70928: A(73) = 3.68403: A(74) = -1.03509: A(75) = 4.27282:
    A(76) = -1.15694: A(77) = 3.14044: A(78) = -2.20515: A(79) = 1.58473: A(80) = -3.8257:
    A(81) = 1.01577: A(82) = -4.22668: A(83) = 1.2152: A(84) = -2.95696: A(85) = 2.3803:
    A(86) = -1.47429: A(87) = 3.95165: A(88) = -1.00416: A(89) = 4.15959: A(90) = -1.28478:
    A(91) = 2.77081: A(92) = -2.56208: A(93) = 1.37768: A(94) = -4.06016: A(95) = 1.00001:
    A(96) = -4.07237: A(97) = 1.3666: A(98) = -2.58502: A(99) = 2.74761: A(100) = -1.29428:
    A(101) = 4.14982: A(102) = -1.00324: A(103) = 3.96613: A(104) = -1.46153: A(105) = 2.40262:
    A(106) = -2.93388: A(107) = 1.22323: A(108) = -4.21946: A(109) = 1.01392: A(110) = -3.84227:
    A(111) = 1.57022: A(112) = -2.22649: A(113) = 3.11785: A(114) = -1.1636: A(115) = 4.26825:
    A(116) = -1.03226: A(117) = 3.70245: A(118) = -1.69302: A(119) = 2.05926: A(120) = -3.29657:
    A(121) = 1.11447: A(122) = -4.29554: A(123) = 1.05864: A(124) = -3.54861: A(125) = 1.82977:
    A(126) = -1.90308: A(127) = 3.46723: A(128) = -1.07498: A(129) = 4.30094: A(130) = -1.0936:
    A(131) = 3.38294: A(132) = -1.97979: A(133) = 1.75957: A(134) = -3.62727: A(135) = 1.04439:
    A(136) = -4.28457: A(137) = 1.13782: A(138) = -3.20791: A(139) = 2.14174: A(140) = -1.62976:
    A(141) = 3.77435: A(142) = -1.02209: A(143) = 4.24646: A(144) = -1.19209: A(145) = 3.0262:
    A(146) = -2.31373: A(147) = 1.51404: A(148) = -3.9064: A(149) = 1.00763: A(150) = -4.18714:
    A(151) = 1.25732: A(152) = -2.8407: A(153) = 2.49335: A(154) = -1.41231: A(155) = 4.02162:
    A(156) = -1.0007: A(157) = 4.10735: A(158) = -1.33444: A(159) = 2.65442: A(160) = -2.67782:
    A(161) = 1.32404: A(162) = -4.1185: A(163) = 1.00117: A(164) = -4.00809: A(165) = 1.42437:
    A(166) = -2.4704: A(167) = 2.86417: A(168) = -1.24847: A(169) = 4.19577: A(170) = -1.00903:
    A(171) = 3.89066: A(172) = -1.52784: A(173) = 2.29159: A(174) = -3.04936: A(175) = 1.18467:
    A(176) = -4.25245: A(177) = 1.02446: A(178) = -3.75661: A(179) = 1.64534: A(180) = -2.12075:
    A(181) = 3.23038: A(182) = -1.13171: A(183) = 4.28784: A(184) = -1.04778: A(185) = 3.60778:
    A(186) = -1.77691:
    
    B(1) = -0.994437: B(2) = -0.173348: B(3) = -0.213325: B(4) = -0.196296: B(5) = -0.0577667:
    B(6) = -0.18738: B(7) = -0.0316424: B(8) = -0.131733: B(9) = -0.0392393: B(10) = -0.0614352:
    B(11) = -0.0742446: B(12) = -0.0229195: B(13) = -0.0867564: B(14) = -0.0160286: B(15) = -0.0688153:
    B(16) = -0.0238827: B(17) = -0.0332183: B(18) = -0.0481049: B(19) = -0.0137164: B(20) = -0.05669:
    B(21) = -0.0109199: B(22) = -0.0455196: B(23) = -0.018146: B(24) = -0.0214605: B(25) = -0.0365703:
    B(26) = -0.00955185: B(27) = -0.0421162: B(28) = -0.00844175: B(29) = -0.0332433: B(30) = -0.0152676:
    B(31) = -0.0151166: B(32) = -0.0299635: B(33) = -0.00722523: B(34) = -0.0334423: B(35) = -0.00702078:
    B(36) = -0.0255774: B(37) = -0.0136176: B(38) = -0.0112243: B(39) = -0.0256031: B(40) = -0.00576919:
    B(41) = -0.0276397: B(42) = -0.00613371: B(43) = -0.0202843: B(44) = -0.0125995: B(45) = -0.00864808:
    B(46) = -0.0224548: B(47) = -0.00479195: B(48) = -0.0234484: B(49) = -0.00555742: B(50) = -0.0163846:
    B(51) = -0.0119377: B(52) = -0.00685631: B(53) = -0.0200377: B(54) = -0.00410527: B(55) = -0.0202491:
    B(56) = -0.00518125: B(57) = -0.0133861: B(58) = -0.0114829: B(59) = -0.00556588: B(60) = -0.0180987:
    B(61) = -0.00360793: B(62) = -0.0177018: B(63) = -0.00494448: B(64) = -0.0110167: B(65) = -0.0111453:
    B(66) = -0.00461203: B(67) = -0.016492: B(68) = -0.00324094: B(69) = -0.0156035: B(70) = -0.00481109:
    B(71) = -0.00911386: B(72) = -0.0108674: B(73) = -0.00389261: B(74) = -0.0151272: B(75) = -0.00296795:
    B(76) = -0.0138261: B(77) = -0.0047582: B(78) = -0.00757297: B(79) = -0.0106127: B(80) = -0.00334127:
    B(81) = -0.0139447: B(82) = -0.00276564: B(83) = -0.0122848: B(84) = -0.00477005: B(85) = -0.0063212:
    B(86) = -0.0103588: B(87) = -0.00291334: B(88) = -0.0129034: B(89) = -0.00261846: B(90) = -0.0109224:
    B(91) = -0.00483453: B(92) = -0.005304: B(93) = -0.0100942: B(94) = -0.00257797: B(95) = -0.0119733:
    B(96) = -0.00251596: B(97) = -0.00969992: B(98) = -0.004941: B(99) = -0.00447816: B(100) = -0.00981434:
    B(101) = -0.00231333: B(102) = -0.0111321: B(103) = -0.00245103: B(104) = -0.00859164: B(105) = -0.00507891:
    B(106) = -0.00380829: B(107) = -0.00951946: B(108) = -0.00210378: B(109) = -0.0103622: B(110) = -0.00241886:
    B(111) = -0.00758153: B(112) = -0.00523707: B(113) = -0.00326516: B(114) = -0.00921218: B(115) = -0.00193787:
    B(116) = -0.00964967: B(117) = -0.00241622: B(118) = -0.00666071: B(119) = -0.00540345: B(120) = -0.00282462:
    B(121) = -0.00889614: B(122) = -0.00180726: B(123) = -0.00898299: B(124) = -0.00244103: B(125) = -0.0058252:
    B(126) = -0.0055658: B(127) = -0.00246694: B(128) = -0.00857495: B(129) = -0.00170579: B(130) = -0.00835273:
    B(131) = -0.00249193: B(132) = -0.00507364: B(133) = -0.00571258: B(134) = -0.00217612: B(135) = -0.00825173:
    B(136) = -0.00162874: B(137) = -0.00775108: B(138) = -0.00256793: B(139) = -0.00440531: B(140) = -0.00583419:
    B(141) = -0.00193931: B(142) = -0.00792881: B(143) = -0.00157292: B(144) = -0.0071718: B(145) = -0.0026681:
    B(146) = -0.00381855: B(147) = -0.00592386: B(148) = -0.00174632: B(149) = -0.00760776: B(150) = -0.00153586:
    B(151) = -0.0066102: B(152) = -0.00279111: B(153) = -0.00330994: B(154) = -0.00597807: B(155) = -0.00158904:
    B(156) = -0.00728939: B(157) = -0.00151592: B(158) = -0.00606336: B(159) = -0.00293488: B(160) = -0.00287419:
    B(161) = -0.00599637: B(162) = -0.0014611: B(163) = -0.00697387: B(164) = -0.00151203: B(165) = -0.00553031:
    B(166) = -0.00309615: B(167) = -0.00250451: B(168) = -0.00598066: B(169) = -0.00135748: B(170) = -0.00666081:
    B(171) = -0.00152362: B(172) = -0.00501215: B(173) = -0.00327021: B(174) = -0.00219331: B(175) = -0.00593438:
    B(176) = -0.0012743: B(177) = -0.00634941: B(178) = -0.00155048: B(179) = -0.00451198: B(180) = -0.00345084:
    B(181) = -0.00193287: B(182) = -0.00586171: B(183) = -0.00120852: B(184) = -0.00603853: B(185) = -0.00159276:
    B(186) = -0.00403451:
    
    beta(1) = 0.00000000032364: beta(2) = 0.000000000913235: beta(3) = 0.00000000277138: beta(4) = 0.00000000385639: beta(5) = 0.0000000070959:
    beta(6) = 0.00000000941408: beta(7) = 0.0000000130862: beta(8) = 0.0000000176869: beta(9) = 0.0000000209364: beta(10) = 0.0000000280048:
    beta(11) = 0.0000000312882: beta(12) = 0.0000000394735: beta(13) = 0.0000000449666: beta(14) = 0.0000000523455: beta(15) = 0.0000000614922:
    beta(16) = 0.0000000671789: beta(17) = 0.0000000795289: beta(18) = 0.0000000850942: beta(19) = 0.0000000980375: beta(20) = 0.000000106987:
    beta(21) = 0.00000011778: beta(22) = 0.000000131725: beta(23) = 0.000000139657: beta(24) = 0.000000157318: beta(25) = 0.0000001653:
    beta(26) = 0.000000182781: beta(27) = 0.000000195477: beta(28) = 0.000000209392: beta(29) = 0.000000228366: beta(30) = 0.000000238391:
    beta(31) = 0.000000261348: beta(32) = 0.000000271928: beta(33) = 0.0000002937: beta(34) = 0.000000310438: beta(35) = 0.000000327188:
    beta(36) = 0.000000351393: beta(37) = 0.000000363404: beta(38) = 0.000000391599: beta(39) = 0.000000404997: beta(40) = 0.00000043079:
    beta(41) = 0.000000451866: beta(42) = 0.000000471172: beta(43) = 0.000000500782: beta(44) = 0.000000514721: beta(45) = 0.000000548055:
    beta(46) = 0.000000564523: beta(47) = 0.000000594051: beta(48) = 0.000000619758: beta(49) = 0.000000641354: beta(50) = 0.000000676504:
    beta(51) = 0.000000692371: beta(52) = 0.000000730701: beta(53) = 0.000000750518: beta(54) = 0.00000078348: beta(55) = 0.000000814105:
    beta(56) = 0.000000837743: beta(57) = 0.000000878528: beta(58) = 0.000000896384: beta(59) = 0.000000939527: beta(60) = 0.000000962989:
    beta(61) = 0.000000999079: beta(62) = 0.0000010349: beta(63) = 0.00000106035: beta(64) = 0.00000110682: beta(65) = 0.00000112679:
    beta(66) = 0.00000117453: beta(67) = 0.00000120194: beta(68) = 0.00000124085: beta(69) = 0.00000128212: beta(70) = 0.0000013092:
    beta(71) = 0.00000136136: beta(72) = 0.00000138362: beta(73) = 0.00000143569: beta(74) = 0.00000146738: beta(75) = 0.0000015088:
    beta(76) = 0.00000155575: beta(77) = 0.0000015843: beta(78) = 0.00000164212: beta(79) = 0.0000016669: beta(80) = 0.00000172302:
    beta(81) = 0.0000017593: beta(82) = 0.00000180292: beta(83) = 0.00000185578: beta(84) = 0.00000188567: beta(85) = 0.00000194907:
    beta(86) = 0.00000197664: beta(87) = 0.0000020365: beta(88) = 0.00000207771: beta(89) = 0.00000212323: beta(90) = 0.00000218217:
    beta(91) = 0.00000221335: beta(92) = 0.00000228219: beta(93) = 0.00000231288: beta(94) = 0.00000237615: beta(95) = 0.00000242259:
    beta(96) = 0.00000246973: beta(97) = 0.00000253489: beta(98) = 0.00000256736: beta(99) = 0.00000264147: beta(100) = 0.00000267562:
    beta(101) = 0.00000274195: beta(102) = 0.00000279394: beta(103) = 0.00000284243: beta(104) = 0.00000291393: beta(105) = 0.00000294773:
    beta(106) = 0.0000030269: beta(107) = 0.00000306486: beta(108) = 0.00000313391: beta(109) = 0.00000319175: beta(110) = 0.00000324134:
    beta(111) = 0.00000331923: beta(112) = 0.0000033545: beta(113) = 0.00000343847: beta(114) = 0.00000348063: beta(115) = 0.00000355203:
    beta(116) = 0.00000361601: beta(117) = 0.00000366648: beta(118) = 0.00000375077: beta(119) = 0.0000037877: beta(120) = 0.00000387618:
    beta(121) = 0.0000039229: beta(122) = 0.00000399632: beta(123) = 0.00000406669: beta(124) = 0.00000411786: beta(125) = 0.00000420851:
    beta(126) = 0.00000424736: beta(127) = 0.00000434002: beta(128) = 0.0000043917: beta(129) = 0.00000446677: beta(130) = 0.00000454379:
    beta(131) = 0.0000045955: beta(132) = 0.00000469242: beta(133) = 0.00000473353: beta(134) = 0.00000482999: beta(135) = 0.00000488701:
    beta(136) = 0.0000049634: beta(137) = 0.00000504728: beta(138) = 0.00000509943: beta(139) = 0.00000520246: beta(140) = 0.00000524622:
    beta(141) = 0.0000053461: beta(142) = 0.00000540882: beta(143) = 0.00000548621: beta(144) = 0.00000557713: beta(145) = 0.00000562966:
    beta(146) = 0.00000573863: beta(147) = 0.00000578545: beta(148) = 0.00000588834: beta(149) = 0.00000595713: beta(150) = 0.00000603521:
    beta(151) = 0.00000613331: beta(152) = 0.00000618625: beta(153) = 0.0000063009: beta(154) = 0.00000635124: beta(155) = 0.00000645672:
    beta(156) = 0.00000653193: beta(157) = 0.00000661041: beta(158) = 0.00000671578: beta(159) = 0.00000676921: beta(160) = 0.00000688926:
    beta(161) = 0.0000069436: beta(162) = 0.00000705124: beta(163) = 0.0000071332: beta(164) = 0.00000721181: beta(165) = 0.0000073245:
    beta(166) = 0.00000737858: beta(167) = 0.0000075037: beta(168) = 0.00000756253: beta(169) = 0.00000767191: beta(170) = 0.00000776093:
    beta(171) = 0.00000783944: beta(172) = 0.00000795944: beta(173) = 0.00000801441: beta(174) = 0.00000814423: beta(175) = 0.00000820803:
    beta(176) = 0.00000831873: beta(177) = 0.00000841511: beta(178) = 0.00000849331: beta(179) = 0.00000862055: beta(180) = 0.00000867675:
    beta(181) = 0.00000881085: beta(182) = 0.00000888008: beta(183) = 0.00000899171: beta(184) = 0.00000909571: beta(185) = 0.00000917345:
    beta(186) = 0.00000930779:
    
    If z < h1 Then
        c1 = (Delta * nu * (1 - z / h1) + theta) / (Delta * nu + theta)
        For i = 1 To NN1
            c1 = c1 + B(i) * Sin(lambda(i) * z / h1) * Exp(-beta(i) * t)
        Next
    Else
        c2 = (1 + theta - z / h1) / (Delta * nu + theta)
        For i = 1 To NN1
            c2 = c2 + A(i) * B(i) * Sin(mu * lambda(i) * (h1 + h2 - z) / h1) * Exp(-beta(i) * t)
        Next
    End If

    If z < h1 Then
        ccc = c1
    Else
        ccc = c2
    End If



End Function
